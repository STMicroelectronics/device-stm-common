From 4edba476e7f0abefce92dc5c4c4c157c3c071cc9 Mon Sep 17 00:00:00 2001
From: Nicolas LOUBOUTIN <nicolas.louboutin@st.com>
Date: Mon, 10 Jul 2023 15:32:26 +0200
Subject: [PATCH 3/4] utils: correct unused parameter warnings

add explicit __unused annotation

Signed-off-by: Nicolas LOUBOUTIN <nicolas.louboutin@st.com>
---
 utils/common/codec-fwht.c             |  2 +-
 utils/common/v4l-helpers.h            | 10 +++++-----
 utils/common/v4l-stream.c             |  6 +++---
 utils/common/v4l2-tpg-core.c          |  2 +-
 utils/common/v4l2-tpg.h               |  2 +-
 utils/media-ctl/libmediactl.c         | 10 +++++-----
 utils/media-ctl/media-ctl.c           |  4 ++--
 utils/v4l2-ctl/v4l2-ctl-streaming.cpp |  6 +++---
 8 files changed, 21 insertions(+), 21 deletions(-)

diff --git a/utils/common/codec-fwht.c b/utils/common/codec-fwht.c
index 1ce682e1..91419ddb 100644
--- a/utils/common/codec-fwht.c
+++ b/utils/common/codec-fwht.c
@@ -380,7 +380,7 @@ static void noinline_for_stack fwht(const u8 *block, s16 *output_block,
  * works with 16 signed data
  */
 static void noinline_for_stack
-fwht16(const s16 *block, s16 *output_block, int stride, int intra)
+fwht16(const s16 *block, s16 *output_block, int stride, int intra __unused)
 {
 	/* we'll need more than 8 bits for the transformed coefficients */
 	s32 workspace1[8], workspace2[8];
diff --git a/utils/common/v4l-helpers.h b/utils/common/v4l-helpers.h
index c09cd987..09faeebb 100644
--- a/utils/common/v4l-helpers.h
+++ b/utils/common/v4l-helpers.h
@@ -111,7 +111,7 @@ static inline void v4l_fd_s_direct(struct v4l_fd *f, bool direct)
 
 #else
 
-static inline int v4l_wrap_open(struct v4l_fd *f, const char *file, int oflag, ...)
+static inline int v4l_wrap_open(struct v4l_fd *f __unused, const char *file, int oflag, ...)
 {
  	return open(file, oflag);
 }
@@ -151,17 +151,17 @@ static inline void *v4l_wrap_mmap(void *start, size_t length, int prot, int flag
  	return mmap(start, length, prot, flags, f->fd, offset);
 }
 
-static inline int v4l_wrap_munmap(struct v4l_fd *f, void *start, size_t length)
+static inline int v4l_wrap_munmap(struct v4l_fd *f __unused, void *start, size_t length)
 {
  	return munmap(start, length);
 }
 
-static inline bool v4l_fd_g_direct(const struct v4l_fd *f)
+static inline bool v4l_fd_g_direct(const struct v4l_fd *f __unused)
 {
 	return true;
 }
 
-static inline void v4l_fd_s_direct(struct v4l_fd *f, bool direct)
+static inline void v4l_fd_s_direct(struct v4l_fd *f __unused, bool direct __unused)
 {
 }
 
@@ -1629,7 +1629,7 @@ static inline int v4l_queue_munmap_bufs(struct v4l_fd *f, struct v4l_queue *q,
 	return 0;
 }
 
-static inline int v4l_queue_alloc_bufs(struct v4l_fd *f,
+static inline int v4l_queue_alloc_bufs(struct v4l_fd *f __unused,
 		struct v4l_queue *q, unsigned from)
 {
 	unsigned b, p;
diff --git a/utils/common/v4l-stream.c b/utils/common/v4l-stream.c
index 44ee137e..4055fa71 100644
--- a/utils/common/v4l-stream.c
+++ b/utils/common/v4l-stream.c
@@ -244,7 +244,7 @@ void fwht_free(struct codec_ctx *ctx)
 	free(ctx);
 }
 
-__u8 *fwht_compress(struct codec_ctx *ctx, __u8 *buf, unsigned uncomp_size, unsigned *comp_size)
+__u8 *fwht_compress(struct codec_ctx *ctx, __u8 *buf, unsigned uncomp_size __unused, unsigned *comp_size)
 {
 	ctx->state.i_frame_qp = ctx->state.p_frame_qp = 20;
 	*comp_size = v4l2_fwht_encode(&ctx->state, buf, ctx->state.compressed_frame);
@@ -288,8 +288,8 @@ static void copy_cap_to_ref(const u8 *cap, const struct v4l2_fwht_pixfmt_info *i
 	}
 }
 
-bool fwht_decompress(struct codec_ctx *ctx, __u8 *p_in, unsigned comp_size,
-		     __u8 *p_out, unsigned uncomp_size)
+bool fwht_decompress(struct codec_ctx *ctx, __u8 *p_in, unsigned comp_size __unused,
+		     __u8 *p_out, unsigned uncomp_size __unused)
 {
 	memcpy(&ctx->state.header, p_in, sizeof(ctx->state.header));
 	p_in += sizeof(ctx->state.header);
diff --git a/utils/common/v4l2-tpg-core.c b/utils/common/v4l2-tpg-core.c
index f0090ed6..3c179358 100644
--- a/utils/common/v4l2-tpg-core.c
+++ b/utils/common/v4l2-tpg-core.c
@@ -2292,7 +2292,7 @@ static void tpg_fill_params_extras(const struct tpg_data *tpg,
 
 static void tpg_fill_plane_extras(const struct tpg_data *tpg,
 				  const struct tpg_draw_params *params,
-				  unsigned p, unsigned h, u8 *vbuf)
+				  unsigned p, unsigned h __unused, u8 *vbuf)
 {
 	unsigned twopixsize = params->twopixsize;
 	unsigned img_width = params->img_width;
diff --git a/utils/common/v4l2-tpg.h b/utils/common/v4l2-tpg.h
index ecdb6eba..66fbc9df 100644
--- a/utils/common/v4l2-tpg.h
+++ b/utils/common/v4l2-tpg.h
@@ -539,7 +539,7 @@ static inline unsigned tpg_g_line_width(const struct tpg_data *tpg, unsigned pla
 }
 
 static inline unsigned tpg_calc_line_width(const struct tpg_data *tpg,
-					   unsigned plane, unsigned bpl)
+					   unsigned plane __unused, unsigned bpl)
 {
 	unsigned w = 0;
 	unsigned p;
diff --git a/utils/media-ctl/libmediactl.c b/utils/media-ctl/libmediactl.c
index a18b063e..f8d21ef9 100644
--- a/utils/media-ctl/libmediactl.c
+++ b/utils/media-ctl/libmediactl.c
@@ -437,12 +437,12 @@ static int media_get_devname_udev(struct udev *udev,
 
 struct udev;
 
-static inline int media_udev_open(struct udev **udev) { return 0; }
+static inline int media_udev_open(struct udev **udev __unused) { return 0; }
 
-static inline void media_udev_close(struct udev *udev) { }
+static inline void media_udev_close(struct udev *udev __unused) { }
 
-static inline int media_get_devname_udev(struct udev *udev,
-		struct media_entity *entity)
+static inline int media_get_devname_udev(struct udev *udev __unused,
+		struct media_entity *entity __unused)
 {
 	return -ENOTSUP;
 }
@@ -634,7 +634,7 @@ done:
  * Create/destroy
  */
 
-static void media_debug_default(void *ptr, ...)
+static void media_debug_default(void *ptr __unused, ...)
 {
 }
 
diff --git a/utils/media-ctl/media-ctl.c b/utils/media-ctl/media-ctl.c
index 84ee7a83..aaeced15 100644
--- a/utils/media-ctl/media-ctl.c
+++ b/utils/media-ctl/media-ctl.c
@@ -231,7 +231,7 @@ static void v4l2_subdev_print_dv_timings(const struct v4l2_dv_timings *timings,
 }
 
 static void v4l2_subdev_print_pad_dv(struct media_entity *entity,
-	unsigned int pad, enum v4l2_subdev_format_whence which)
+	unsigned int pad, enum v4l2_subdev_format_whence which __unused)
 {
 	struct v4l2_dv_timings_cap caps;
 	int ret;
@@ -467,7 +467,7 @@ static void media_print_pad_text(struct media_entity *entity,
 		v4l2_subdev_print_subdev_dv(entity);
 }
 
-static void media_print_topology_text_entity(struct media_device *media,
+static void media_print_topology_text_entity(struct media_device *media __unused,
 					     struct media_entity *entity)
 {
 	static const struct flag_name link_flags[] = {
diff --git a/utils/v4l2-ctl/v4l2-ctl-streaming.cpp b/utils/v4l2-ctl/v4l2-ctl-streaming.cpp
index 7e24e0ec..7b480795 100644
--- a/utils/v4l2-ctl/v4l2-ctl-streaming.cpp
+++ b/utils/v4l2-ctl/v4l2-ctl-streaming.cpp
@@ -793,7 +793,7 @@ void streaming_cmd(int ch, char *optarg)
  * Assume that the fwht stream is valid and that each
  * frame starts right after the previous one.
  */
-static bool read_fwht_frame(cv4l_fmt &fmt, unsigned char *buf,
+static bool read_fwht_frame(cv4l_fmt &fmt __unused, unsigned char *buf,
 			    FILE *fpointer, unsigned &sz,
 			    unsigned &expected_len, unsigned buf_len)
 {
@@ -973,7 +973,7 @@ static bool read_write_padded_frame(cv4l_fmt &fmt, unsigned char *buf,
 }
 
 static bool fill_buffer_from_file(cv4l_fd &fd, cv4l_queue &q, cv4l_buffer &b,
-				  cv4l_fmt &fmt, FILE *fin)
+				  cv4l_fmt &fmt __unused, FILE *fin)
 {
 	static bool first = true;
 	static bool is_fwht = false;
@@ -1307,7 +1307,7 @@ static int do_setup_out_buffers(cv4l_fd &fd, cv4l_queue &q, FILE *fin, bool qbuf
 	return 0;
 }
 
-static void write_buffer_to_file(cv4l_fd &fd, cv4l_queue &q, cv4l_buffer &buf,
+static void write_buffer_to_file(cv4l_fd &fd __unused, cv4l_queue &q, cv4l_buffer &buf,
 				 cv4l_fmt &fmt, FILE *fout)
 {
 #ifndef NO_STREAM_TO
-- 
2.17.1

