From ced06fe99b319c7da843e5da040b61d584121654 Mon Sep 17 00:00:00 2001
From: frq09432 <nicolas.louboutin@st.com>
Date: Mon, 3 Feb 2020 18:23:12 +0100
Subject: [PATCH] Check vsync state just before calling the callback (race) to
 avoid invalid vsync

Change-Id: I62c67abd52264cab4564586b3f3a6af4b12e079b
---
 drm/vsyncworker.cpp | 10 ++++++++--
 1 file changed, 8 insertions(+), 2 deletions(-)

diff --git a/drm/vsyncworker.cpp b/drm/vsyncworker.cpp
index d022887..0794c3d 100644
--- a/drm/vsyncworker.cpp
+++ b/drm/vsyncworker.cpp
@@ -128,7 +128,6 @@ void VSyncWorker::Routine() {
 
   bool enabled = enabled_;
   int display = display_;
-  std::shared_ptr<VsyncCallback> callback(callback_);
   Unlock();
 
   if (!enabled)
@@ -169,7 +168,14 @@ void VSyncWorker::Routine() {
    * the hook. However, in practice, callback_ is only updated once, so it's not
    * worth the overhead.
    */
-  if (callback)
+
+  // race played including the enable state to avoid invalid vsync
+  Lock();
+  std::shared_ptr<VsyncCallback> callback(callback_);
+  enabled = enabled_;
+  Unlock();
+
+  if ((enabled) && (callback))
     callback->Callback(display, timestamp);
   last_timestamp_ = timestamp;
 }
-- 
2.7.4

