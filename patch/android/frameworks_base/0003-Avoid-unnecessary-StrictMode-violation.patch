From 3746f46bab374550a52cb5d0e3c31bade0606bfe Mon Sep 17 00:00:00 2001
From: frq09432 <nicolas.louboutin@st.com>
Date: Wed, 6 Nov 2019 08:53:35 +0100
Subject: [PATCH 03/12] Avoid unnecessary StrictMode violation

Change-Id: I2ebaebd26dfa8850bbfcc2d5504a6ca69cd4a256
---
 core/java/android/app/ContextImpl.java           | 14 ++++++++----
 core/java/android/app/SharedPreferencesImpl.java | 29 +++++++++++++++---------
 2 files changed, 28 insertions(+), 15 deletions(-)

diff --git a/core/java/android/app/ContextImpl.java b/core/java/android/app/ContextImpl.java
index 41a4fba..bdb3463 100644
--- a/core/java/android/app/ContextImpl.java
+++ b/core/java/android/app/ContextImpl.java
@@ -64,6 +64,7 @@ import android.os.IBinder;
 import android.os.Looper;
 import android.os.Process;
 import android.os.RemoteException;
+import android.os.StrictMode;
 import android.os.Trace;
 import android.os.UserHandle;
 import android.os.UserManager;
@@ -645,10 +646,15 @@ class ContextImpl extends Context {
         if (!file.exists()) {
             final String path = file.getAbsolutePath();
             try {
-                Os.mkdir(path, mode);
-                Os.chmod(path, mode);
-                if (gid != -1) {
-                    Os.chown(path, -1, gid);
+                final StrictMode.ThreadPolicy oldPolicy = StrictMode.allowThreadDiskWrites();
+                try {
+                    Os.mkdir(path, mode);
+                    Os.chmod(path, mode);
+                    if (gid != -1) {
+                        Os.chown(path, -1, gid);
+                    }
+                } finally {
+                    StrictMode.setThreadPolicy(oldPolicy);
                 }
             } catch (ErrnoException e) {
                 if (e.errno == OsConstants.EEXIST) {
diff --git a/core/java/android/app/SharedPreferencesImpl.java b/core/java/android/app/SharedPreferencesImpl.java
index 0f8976f..50ab311 100644
--- a/core/java/android/app/SharedPreferencesImpl.java
+++ b/core/java/android/app/SharedPreferencesImpl.java
@@ -21,6 +21,7 @@ import android.annotation.UnsupportedAppUsage;
 import android.content.SharedPreferences;
 import android.os.FileUtils;
 import android.os.Looper;
+import android.os.StrictMode;
 import android.system.ErrnoException;
 import android.system.Os;
 import android.system.StructStat;
@@ -458,8 +459,10 @@ final class SharedPreferencesImpl implements SharedPreferences {
         public void apply() {
             final long startTime = System.currentTimeMillis();
 
-            final MemoryCommitResult mcr = commitToMemory();
-            final Runnable awaitCommit = new Runnable() {
+            final StrictMode.ThreadPolicy oldPolicy = StrictMode.allowThreadDiskWrites();
+            try {
+                final MemoryCommitResult mcr = commitToMemory();
+                final Runnable awaitCommit = new Runnable() {
                     @Override
                     public void run() {
                         try {
@@ -474,10 +477,9 @@ final class SharedPreferencesImpl implements SharedPreferences {
                         }
                     }
                 };
+                QueuedWork.addFinisher(awaitCommit);
 
-            QueuedWork.addFinisher(awaitCommit);
-
-            Runnable postWriteRunnable = new Runnable() {
+                Runnable postWriteRunnable = new Runnable() {
                     @Override
                     public void run() {
                         awaitCommit.run();
@@ -485,13 +487,18 @@ final class SharedPreferencesImpl implements SharedPreferences {
                     }
                 };
 
-            SharedPreferencesImpl.this.enqueueDiskWrite(mcr, postWriteRunnable);
+                SharedPreferencesImpl.this.enqueueDiskWrite(mcr, postWriteRunnable);
+
+                // Okay to notify the listeners before it's hit disk
+                // because the listeners should always get the same
+                // SharedPreferences instance back, which has the
+                // changes reflected in memory.
+                notifyListeners(mcr);
+
+            } finally {
+                    StrictMode.setThreadPolicy(oldPolicy);
+            }
 
-            // Okay to notify the listeners before it's hit disk
-            // because the listeners should always get the same
-            // SharedPreferences instance back, which has the
-            // changes reflected in memory.
-            notifyListeners(mcr);
         }
 
         // Returns true if any changes were made
-- 
2.7.4

