From a0612196b86bd2c508958911a1f8d0953fea997c Mon Sep 17 00:00:00 2001
From: Nicolas LOUBOUTIN <nicolas.louboutin@st.com>
Date: Tue, 30 Jul 2024 11:21:46 +0200
Subject: [PATCH 3/3] Remove debugfs option not compatible with Android user
 build

Signed-off-by: Nicolas LOUBOUTIN <nicolas.louboutin@st.com>
---
 hal/os/linux/kernel/gc_hal_kernel_device.c | 384 +--------------------
 1 file changed, 19 insertions(+), 365 deletions(-)

diff --git a/hal/os/linux/kernel/gc_hal_kernel_device.c b/hal/os/linux/kernel/gc_hal_kernel_device.c
index 1350bcd..22d691b 100644
--- a/hal/os/linux/kernel/gc_hal_kernel_device.c
+++ b/hal/os/linux/kernel/gc_hal_kernel_device.c
@@ -66,36 +66,6 @@
 
 static gckGALDEVICE     galDevice;
 
-#ifdef CONFIG_DEBUG_FS
-#if defined(CONFIG_CPU_CSKYV2) && LINUX_VERSION_CODE <= KERNEL_VERSION(3, 0, 8)
-static void
-seq_vprintf(struct seq_file *m, const char *f, va_list args)
-{
-    int len;
-
-    if (m->count < m->size) {
-        len = vsnprintf(m->buf + m->count, m->size - m->count, f, args);
-        if (m->count + len < m->size) {
-            m->count += len;
-            return;
-        }
-    }
-    m->count = m->size;
-}
-# endif
-
-static int
-debugfs_printf(void *obj, const char *fmt, ...)
-{
-    va_list args;
-
-    va_start(args, fmt);
-    seq_vprintf((struct seq_file *)obj, fmt, args);
-    va_end(args);
-
-    return 0;
-}
-#else
 static int
 sys_printf(void *obj, const char *fmt, ...)
 {
@@ -108,16 +78,11 @@ sys_printf(void *obj, const char *fmt, ...)
 
     return len;
 }
-#endif
 
-#ifdef CONFIG_DEBUG_FS
-# define fs_printf debugfs_printf
-#else
 # define fs_printf sys_printf
-#endif
 
 /*******************************************************************************
- ******************************* Debugfs Support *******************************
+ ******************************** Sysfs Support ********************************
  *******************************************************************************/
 
 /*******************************************************************************
@@ -131,11 +96,8 @@ gc_info_show(void *m, void *data)
     gckDEVICE device = gcvNULL;
     int i = 0;
     int len = 0;
-#ifdef CONFIG_DEBUG_FS
-    void *ptr = m;
-#else
     char *ptr = (char *)m;
-#endif
+
     gceCHIPMODEL chipModel = 0;
     gctUINT32 chipRevision = 0;
     gctUINT32 productID = 0;
@@ -179,11 +141,7 @@ gc_clients_show(void *m, void *data)
     gctINT i, pid;
     char name[24];
     int len = 0;
-#ifdef CONFIG_DEBUG_FS
-    void *ptr = m;
-#else
     char *ptr = (char *)m;
-#endif
 
     if (!kernel)
         return -ENXIO;
@@ -229,11 +187,7 @@ gc_meminfo_show(void *m, void *data)
     gcsDATABASE_PTR database;
     gctUINT32 i;
     int len = 0;
-#ifdef CONFIG_DEBUG_FS
-    void *ptr = m;
-#else
     char *ptr = (char *)m;
-#endif
 
     gctUINT64 free = 0, used = 0, total = 0, minFree = 0, maxUsed = 0;
 
@@ -467,11 +421,7 @@ gc_load_show(void *m, void *data)
     static gctBOOL profilerEnable[gcvCORE_3D_MAX + 1] = { gcvFALSE };
     gctBOOL powerManagement[gcvCORE_3D_MAX + 1] = { gcvFALSE };
 
-#ifdef CONFIG_DEBUG_FS
-    void *ptr = m;
-#else
     char *ptr = (char *)m;
-#endif
 
     if (!gal_device)
         return -ENXIO;
@@ -611,11 +561,7 @@ _ShowCounters(void *File, gcsDATABASE_PTR Database)
 {
     gctUINT i = 0;
     int len = 0;
-#ifdef CONFIG_DEBUG_FS
-    void *ptr = File;
-#else
     char *ptr = (char *)File;
-#endif
 
     static const char * const otherCounterNames[] = {
         "AllocNonPaged",
@@ -691,11 +637,7 @@ _ShowRecord(void *File, gcsDATABASE_PTR Database, gcsDATABASE_RECORD_PTR Record)
     gctPHYS_ADDR_T physical;
     gceSTATUS status = gcvSTATUS_OK;
     int len = 0;
-#ifdef CONFIG_DEBUG_FS
-    void *ptr = File;
-#else
     char *ptr = (char *)File;
-#endif
 
     static const char *recordTypes[gcvDB_NUM_TYPES] = {
         "Unknown",
@@ -745,11 +687,7 @@ _ShowDataBaseOldFormat(void *File, gcsDATABASE_PTR Database)
     gctUINT i;
     char name[24];
     int len = 0;
-#ifdef CONFIG_DEBUG_FS
-    void *ptr = File;
-#else
     char *ptr = (char *)File;
-#endif
 
     /* Process ID and name */
     pid = Database->processID;
@@ -790,11 +728,7 @@ gc_db_old_show(void *m, void *data, gctBOOL all)
     gckGALDEVICE device = galDevice;
     gckKERNEL kernel = _GetValidKernel(device);
     int len = 0;
-#ifdef CONFIG_DEBUG_FS
-    void *ptr = m;
-#else
     char *ptr = (char *)m;
-#endif
 
     if (!kernel)
         return -ENXIO;
@@ -844,11 +778,7 @@ gc_version_show(void *m, void *data)
     gckGALDEVICE device = galDevice;
     gcsPLATFORM *platform = gcvNULL;
     int len = 0;
-#ifdef CONFIG_DEBUG_FS
-    void *ptr = m;
-#else
     char *ptr = (char *)m;
-#endif
 
     if (!device)
         return -ENXIO;
@@ -857,16 +787,7 @@ gc_version_show(void *m, void *data)
     if (!platform)
         return -ENXIO;
 
-#ifdef CONFIG_DEBUG_FS
-    len = fs_printf(ptr, "%s built at %s\n", gcvVERSION_STRING, HOST);
-
-    if (platform->name)
-        len += fs_printf(ptr + len, "Platform path: %s\n", platform->name);
-    else
-        len += fs_printf(ptr + len, "Code path: %s\n", __FILE__);
-#else
     len = fs_printf(ptr, "%s\n", gcvVERSION_STRING);
-#endif
 
     return len;
 }
@@ -918,11 +839,7 @@ gc_idle_show(void *m, void *data)
     gctUINT64 idle;
     gctUINT64 suspend;
     int len = 0;
-#ifdef CONFIG_DEBUG_FS
-    void *ptr = m;
-#else
     char *ptr = (char *)m;
-#endif
 
     if (!kernel)
         return -ENXIO;
@@ -954,11 +871,7 @@ gc_dump_trigger_show(void *m, void *data)
     int len = 0;
 
 #if gcdENABLE_3D
-#ifdef CONFIG_DEBUG_FS
-    void *ptr = m;
-# else
     char *ptr = (char *)m;
-# endif
 
     gckGALDEVICE gal_device = galDevice;
     gckDEVICE device = gcvNULL;
@@ -1028,11 +941,7 @@ _ShowVideoMemoryOldFormat(void *File, gcsDATABASE_PTR Database, gctBOOL All)
 {
     gctUINT i = 0;
     int len = 0;
-#ifdef CONFIG_DEBUG_FS
-    void *ptr = File;
-#else
     char *ptr = (char *)File;
-#endif
 
     static const char * const otherCounterNames[] = {
         "AllocNonPaged",
@@ -1113,11 +1022,7 @@ gc_vidmem_old_show(void *m, void *unused, gctBOOL all)
     char name[64];
     int i;
     int len = 0;
-#ifdef CONFIG_DEBUG_FS
-    void *ptr = m;
-#else
     char *ptr = (char *)m;
-#endif
 
     kernel = _GetValidKernel(gal_device);
 
@@ -1183,11 +1088,7 @@ gc_reserved_mem_usage_show(void *m)
     size_t t_freeBytes = 0;
     size_t t_bytes = 0;
     int t_usage = 0;
-#ifdef CONFIG_DEBUG_FS
-    void *ptr = m;
-#else
     char *ptr = (char *)m;
-#endif
 
     len = fs_printf(ptr, "%-25s %16s %16s %16s\n", "", "FreeBytes", "TotalBytes", "Usage(%)");
 
@@ -1327,67 +1228,6 @@ gc_reserved_mem_usage_show(void *m)
     return 0;
 }
 
-#ifdef CONFIG_DEBUG_FS
-static inline int
-strtoint_from_user(const char __user *s, size_t count, int *res)
-{
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(3, 0, 0)
-    int ret = kstrtoint_from_user(s, count, 10, res);
-
-    return ret < 0 ? ret : count;
-# else
-    /* sign, base 2 representation, newline, terminator */
-    char buf[1 + sizeof(long) * 8 + 1 + 1];
-
-    size_t len = min(count, sizeof(buf) - 1);
-
-    if (copy_from_user(buf, s, len))
-        return -EFAULT;
-    buf[len] = '\0';
-
-    if (kstrtol(buf, 0, res))
-        return gcvSTATUS_INVALID_DATA;
-
-    return count;
-# endif
-}
-
-static int
-gc_vidmem_write(const char __user *buf, size_t count, void *data)
-{
-    return strtoint_from_user(buf, count, &dumpProcess);
-}
-
-static int
-gc_dump_trigger_write(const char __user *buf, size_t count, void *data)
-{
-    return strtoint_from_user(buf, count, &dumpDevice);
-}
-
-#if gcdENABLE_MP_SWITCH
-static int
-gc_switch_core_count(void *m, void *data)
-{
-    return 0;
-}
-
-static int
-gc_switch_core_count_write(const char __user *buf, size_t count, void *data)
-{
-    gckGALDEVICE device = galDevice;
-    int coreCount = 0;
-    int ret;
-
-    ret = strtoint_from_user(buf, count, &coreCount);
-
-    if (ret && coreCount)
-        device->platform->coreCount = coreCount;
-
-    return ret;
-}
-# endif
-#endif
-
 static int
 gc_clk_show(void *m, void *data)
 {
@@ -1396,11 +1236,7 @@ gc_clk_show(void *m, void *data)
     gctUINT i;
     gceSTATUS status;
     int len = 0;
-#ifdef CONFIG_DEBUG_FS
-    void *ptr = m;
-#else
     char *ptr = (char *)m;
-#endif
 
     if (!gal_device)
         return -ENXIO;
@@ -1501,22 +1337,14 @@ gc_poweroff_timeout_show(void *m, void *data)
     gckGALDEVICE gal_device = galDevice;
     gckHARDWARE hardware;
     int len = 0;
-#ifdef CONFIG_DEBUG_FS
-    void *ptr = m;
-#else
     char *ptr = (char *)m;
-#endif
 
     if (!gal_device)
         return -ENXIO;
 
     hardware = gal_device->devices[0]->kernels[0]->hardware;
 
-#ifdef CONFIG_DEBUG_FS
-    len += fs_printf(ptr + len, "power off timeout: %d ms.\n", hardware->powerOffTimeout);
-#else
     len += sprintf(ptr + len, "power off timeout: %d ms.\n", hardware->powerOffTimeout);
-#endif
 
     return len;
 }
@@ -1553,179 +1381,6 @@ poweroff_timeout_set(const char *buf)
     return 0;
 }
 
-#ifdef CONFIG_DEBUG_FS
-static int
-debugfs_copy_from_user(char *k_buf, const char __user *buf, size_t count)
-{
-    int ret;
-
-    ret = copy_from_user(k_buf, buf, count);
-    if (ret != 0) {
-        pr_err("Error: lost data: %d\n", (int)ret);
-        return -1;
-    }
-
-    k_buf[count] = 0;
-
-    return count;
-}
-
-static int
-gc_clk_write(const char __user *buf, size_t count, void *data)
-{
-    size_t ret, _count;
-    char k_buf[30];
-
-    _count = min_t(size_t, count, (sizeof(k_buf) - 1));
-
-    ret = debugfs_copy_from_user(k_buf, buf, _count);
-    if (ret == -1)
-        return ret;
-
-    set_clk(k_buf);
-
-    return ret;
-}
-
-static int
-gc_poweroff_timeout_write(const char __user *buf, size_t count, void *data)
-{
-    size_t ret;
-    char k_buf[30];
-
-    ret = debugfs_copy_from_user(k_buf, buf, count);
-    if (ret == -1)
-        return ret;
-
-    poweroff_timeout_set(k_buf);
-
-    return ret;
-}
-
-int
-gc_info_show_debugfs(struct seq_file *m, void *data)
-{
-    return gc_info_show((void *)m, data);
-}
-
-int
-gc_clients_show_debugfs(struct seq_file *m, void *data)
-{
-    return gc_clients_show((void *)m, data);
-}
-
-int
-gc_meminfo_show_debugfs(struct seq_file *m, void *data)
-{
-    return gc_meminfo_show((void *)m, data);
-}
-
-int
-gc_mmuinfo_show_debugfs(struct seq_file *m, void *data)
-{
-    return gc_mmuinfo_show();
-}
-
-int
-gc_idle_show_debugfs(struct seq_file *m, void *data)
-{
-    return gc_idle_show((void *)m, data);
-}
-
-int
-gc_db_old_show_debugfs(struct seq_file *m, void *data)
-{
-    return gc_db_old_show((void *)m, data, gcvTRUE);
-}
-
-int
-gc_db_show_debugfs(struct seq_file *m, void *data)
-{
-    return gc_db_show((void *)m, data, gcvTRUE);
-}
-
-int
-gc_version_show_debugfs(struct seq_file *m, void *data)
-{
-    return gc_version_show((void *)m, data);
-}
-
-int
-gc_vidmem_old_show_debugfs(struct seq_file *m, void *data)
-{
-    return gc_vidmem_old_show((void *)m, data, gcvTRUE);
-}
-
-int
-gc_vidmem_show_debugfs(struct seq_file *m, void *data)
-{
-    return gc_vidmem_show((void *)m, data, gcvTRUE);
-}
-
-int
-gc_reserved_mem_usage_show_debugfs(struct seq_file *m, void *data)
-{
-    return gc_reserved_mem_usage_show((void *)m);
-}
-
-int
-gc_dump_trigger_show_debugfs(struct seq_file *m, void *data)
-{
-    return gc_dump_trigger_show((void *)m, data);
-}
-
-int
-gc_clk_show_debugfs(struct seq_file *m, void *data)
-{
-    return gc_clk_show((void *)m, data);
-}
-
-int
-gc_poweroff_timeout_show_debugfs(struct seq_file *m, void *data)
-{
-    return gc_poweroff_timeout_show((void *)m, data);
-}
-
-#if gcdENABLE_MP_SWITCH
-int
-gc_switch_core_count_debugfs(struct seq_file *m, void *data)
-{
-    return gc_switch_core_count((void *)m, data);
-}
-# endif
-
-#if VIVANTE_PROFILER
-int
-gc_load_show_debugfs(struct seq_file *m, void *data)
-{
-    return gc_load_show((void *)m, data);
-}
-# endif
-
-static gcsINFO InfoList[] = {
-    { "info", gc_info_show_debugfs },
-    { "clients", gc_clients_show_debugfs },
-    { "meminfo", gc_meminfo_show_debugfs },
-    { "mmu", gc_mmuinfo_show_debugfs },
-    { "idle", gc_idle_show_debugfs },
-    { "database", gc_db_old_show_debugfs },
-    { "database64x", gc_db_show_debugfs },
-    { "version", gc_version_show_debugfs },
-    { "vidmem", gc_vidmem_old_show_debugfs, gc_vidmem_write },
-    { "vidmem64x", gc_vidmem_show_debugfs, gc_vidmem_write },
-    { "reserved_mem_usage", gc_reserved_mem_usage_show_debugfs, gc_vidmem_write },
-    { "dump_trigger", gc_dump_trigger_show_debugfs, gc_dump_trigger_write },
-    { "clk", gc_clk_show_debugfs, gc_clk_write },
-    { "poweroff_timeout", gc_poweroff_timeout_show_debugfs, gc_poweroff_timeout_write },
-#if gcdENABLE_MP_SWITCH
-    { "core_count", gc_switch_core_count_debugfs, gc_switch_core_count_write },
-# endif
-#if VIVANTE_PROFILER
-    { "load", gc_load_show_debugfs },
-# endif
-};
-
-#else
 static ssize_t
 info_show(struct device *dev, struct device_attribute *attr, char *buf)
 {
@@ -1819,6 +1474,21 @@ vidmem64x_store(struct device *dev, struct device_attribute *attr, const char *b
 }
 DEVICE_ATTR_RW(vidmem64x);
 
+static ssize_t
+reserved_mem_usage_show(struct device *dev, struct device_attribute *attr, char *buf)
+{
+    return gc_reserved_mem_usage_show((void *)buf);
+}
+
+static ssize_t
+reserved_mem_usage_store(struct device *dev, struct device_attribute *attr, const char *buf, size_t count)
+{
+    if (kstrtoint(buf, 0, &dumpProcess))
+        return gcvSTATUS_INVALID_DATA;
+    return count;
+}
+DEVICE_ATTR_RW(reserved_mem_usage);
+
 static ssize_t
 dump_trigger_show(struct device *dev, struct device_attribute *attr, char *buf)
 {
@@ -1873,25 +1543,19 @@ static struct attribute *Info_attrs[] = {
     &dev_attr_version.attr,
     &dev_attr_vidmem.attr,
     &dev_attr_vidmem64x.attr,
+    &dev_attr_reserved_mem_usage.attr,
     &dev_attr_dump_trigger.attr,
     &dev_attr_clk.attr,
     &dev_attr_poweroff_timeout.attr,
     NULL,
 };
 ATTRIBUTE_GROUPS(Info);
-#endif
 
 static gceSTATUS
 _DebugfsInit(gckGALDEVICE Device)
 {
     gceSTATUS status = gcvSTATUS_OK;
 
-#ifdef CONFIG_DEBUG_FS
-    gckDEBUGFS_DIR dir = &Device->debugfsDir;
-
-    gcmkONERROR(gckDEBUGFS_DIR_Init(dir, gcvNULL, "gc"));
-    gcmkONERROR(gckDEBUGFS_DIR_CreateFiles(dir, InfoList, gcmCOUNTOF(InfoList), Device));
-#else
     int ret;
     /* TODO. */
     struct device *dev = (struct device *)Device->devices[0]->dev;
@@ -1899,7 +1563,7 @@ _DebugfsInit(gckGALDEVICE Device)
     ret = sysfs_create_groups(&dev->kobj, Info_groups);
     if (ret < 0)
         gcmkONERROR(gcvSTATUS_NOT_SUPPORTED);
-#endif
+
     galDevice = Device;
 
 OnError:
@@ -1909,20 +1573,10 @@ OnError:
 static void
 _DebugfsCleanup(gckGALDEVICE Device)
 {
-#ifdef CONFIG_DEBUG_FS
-    gckDEBUGFS_DIR dir = &Device->debugfsDir;
-
-    if (Device->debugfsDir.root) {
-        gcmkVERIFY_OK(gckDEBUGFS_DIR_RemoveFiles(dir, InfoList, gcmCOUNTOF(InfoList)));
-
-        gckDEBUGFS_DIR_Deinit(dir);
-    }
-#else
     /* TODO. */
     struct device *dev = (struct device *)Device->devices[0]->dev;
 
     sysfs_remove_groups(&dev->kobj, Info_groups);
-#endif
 }
 
 /*******************************************************************************
-- 
2.34.1

